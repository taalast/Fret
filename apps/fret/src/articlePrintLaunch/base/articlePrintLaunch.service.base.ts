/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  ArticlePrintLaunch as PrismaArticlePrintLaunch,
} from "@prisma/client";

export class ArticlePrintLaunchServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.ArticlePrintLaunchCountArgs, "select">
  ): Promise<number> {
    return this.prisma.articlePrintLaunch.count(args);
  }

  async articlePrintLaunches<T extends Prisma.ArticlePrintLaunchFindManyArgs>(
    args: Prisma.SelectSubset<T, Prisma.ArticlePrintLaunchFindManyArgs>
  ): Promise<PrismaArticlePrintLaunch[]> {
    return this.prisma.articlePrintLaunch.findMany<Prisma.ArticlePrintLaunchFindManyArgs>(
      args
    );
  }
  async articlePrintLaunch<T extends Prisma.ArticlePrintLaunchFindUniqueArgs>(
    args: Prisma.SelectSubset<T, Prisma.ArticlePrintLaunchFindUniqueArgs>
  ): Promise<PrismaArticlePrintLaunch | null> {
    return this.prisma.articlePrintLaunch.findUnique(args);
  }
  async createArticlePrintLaunch<T extends Prisma.ArticlePrintLaunchCreateArgs>(
    args: Prisma.SelectSubset<T, Prisma.ArticlePrintLaunchCreateArgs>
  ): Promise<PrismaArticlePrintLaunch> {
    return this.prisma.articlePrintLaunch.create<T>(args);
  }
  async updateArticlePrintLaunch<T extends Prisma.ArticlePrintLaunchUpdateArgs>(
    args: Prisma.SelectSubset<T, Prisma.ArticlePrintLaunchUpdateArgs>
  ): Promise<PrismaArticlePrintLaunch> {
    return this.prisma.articlePrintLaunch.update<T>(args);
  }
  async deleteArticlePrintLaunch<T extends Prisma.ArticlePrintLaunchDeleteArgs>(
    args: Prisma.SelectSubset<T, Prisma.ArticlePrintLaunchDeleteArgs>
  ): Promise<PrismaArticlePrintLaunch> {
    return this.prisma.articlePrintLaunch.delete(args);
  }
}
