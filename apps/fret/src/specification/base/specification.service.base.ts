/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Specification as PrismaSpecification } from "@prisma/client";

export class SpecificationServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.SpecificationCountArgs, "select">
  ): Promise<number> {
    return this.prisma.specification.count(args);
  }

  async specifications<T extends Prisma.SpecificationFindManyArgs>(
    args: Prisma.SelectSubset<T, Prisma.SpecificationFindManyArgs>
  ): Promise<PrismaSpecification[]> {
    return this.prisma.specification.findMany<Prisma.SpecificationFindManyArgs>(
      args
    );
  }
  async specification<T extends Prisma.SpecificationFindUniqueArgs>(
    args: Prisma.SelectSubset<T, Prisma.SpecificationFindUniqueArgs>
  ): Promise<PrismaSpecification | null> {
    return this.prisma.specification.findUnique(args);
  }
  async createSpecification<T extends Prisma.SpecificationCreateArgs>(
    args: Prisma.SelectSubset<T, Prisma.SpecificationCreateArgs>
  ): Promise<PrismaSpecification> {
    return this.prisma.specification.create<T>(args);
  }
  async updateSpecification<T extends Prisma.SpecificationUpdateArgs>(
    args: Prisma.SelectSubset<T, Prisma.SpecificationUpdateArgs>
  ): Promise<PrismaSpecification> {
    return this.prisma.specification.update<T>(args);
  }
  async deleteSpecification<T extends Prisma.SpecificationDeleteArgs>(
    args: Prisma.SelectSubset<T, Prisma.SpecificationDeleteArgs>
  ): Promise<PrismaSpecification> {
    return this.prisma.specification.delete(args);
  }
}
